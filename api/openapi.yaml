openapi: 3.1.0
info:
  title: Online Sales WeChat Mini-Program API
  description: The API documentation for the Plan3 Online Sales WeChat Mini-Program project.
  version: 1.0.0
servers:
  - url: /api
    description: Mock Service Worker
paths:
  /products/search:
    get:
      summary: Search for products
      tags:
        - Products
      parameters:
        - name: q
          in: query
          description: Search query
          schema:
            type: string
        - name: category
          in: query
          description: Category to filter by
          schema:
            type: string
      responses:
        "200":
          description: A list of products that match the search criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  total:
                    type: integer
                  query:
                    type: string
  /products:
    get:
      summary: Get a list of products
      tags:
        - Products
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: category
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A paginated list of products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer
  /products/{id}:
    get:
      summary: Get product details
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The product details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /auth/login:
    post:
      summary: Log in a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /auth/logout:
    post:
      summary: Log out a user
      tags:
        - Auth
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /user/profile:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/User"
    put:
      summary: Update user profile
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                avatar:
                  type: string
      responses:
        "200":
          description: User profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/User"
                  message:
                    type: string
  /user/addresses:
    get:
      summary: Get user addresses
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Address"
    post:
      summary: Add a new address
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: Address added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Address"
                  message:
                    type: string
  /cart:
    get:
      summary: Get the shopping cart
      tags:
        - Cart
      responses:
        "200":
          description: The shopping cart contents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CartItem"
                  total:
                    type: number
                  itemCount:
                    type: integer
    post:
      summary: Add an item to the cart
      tags:
        - Cart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
                selectedVariants:
                  type: object
      responses:
        "200":
          description: Item added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/CartItem"
                  message:
                    type: string
    delete:
      summary: Clear the shopping cart
      tags:
        - Cart
      responses:
        "200":
          description: Cart cleared
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /cart/{id}:
    put:
      summary: Update item quantity in cart
      tags:
        - Cart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        "200":
          description: Cart updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    delete:
      summary: Delete an item from the cart
      tags:
        - Cart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Item deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /cart/batch:
    patch:
      summary: Batch update cart items
      tags:
        - Cart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                updates:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      quantity:
                        type: integer
      responses:
        "200":
          description: Cart batch updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /orders/calculate:
    post:
      summary: Calculate order total
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCalculationRequest"
      responses:
        "200":
          description: Calculation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCalculationResponse"
  /orders:
    post:
      summary: Create a new order
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "201":
          description: Order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    get:
      summary: Get a list of orders
      tags:
        - Orders
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A list of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer
  /orders/{id}:
    get:
      summary: Get order details
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
  /orders/{id}/cancel:
    patch:
      summary: Cancel an order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
                  message:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        image:
          type: string
        description:
          type: string
        category:
          type: string
        tags:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        avatar:
          type: string
        phone:
          type: string
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        createdAt:
          type: string
          format: date-time
    Address:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        isDefault:
          type: boolean
    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/User"
            token:
              type: string
        message:
          type: string
    CartItem:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        name:
          type: string
        price:
          type: number
        image:
          type: string
        quantity:
          type: integer
        selectedVariants:
          type: object
    OrderCalculationRequest:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
              price:
                type: number
        couponCode:
          type: string
        addressId:
          type: string
    OrderCalculationResponse:
      type: object
      properties:
        subtotal:
          type: number
        shipping:
          type: number
        discount:
          type: number
        total:
          type: number
        couponDiscount:
          type: number
        shippingMethod:
          type: string
    CreateOrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
              price:
                type: number
              selectedVariants:
                type: object
        address:
          type: object
          properties:
            name:
              type: string
            phone:
              type: string
            province:
              type: string
            city:
              type: string
            district:
              type: string
            detail:
              type: string
        couponCode:
          type: string
    Order:
      type: object
      properties:
        id:
          type: string
        orderNumber:
          type: string
        status:
          type: string
          enum: [pending, paid, shipped, delivered, cancelled, refunded]
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              name:
                type: string
              image:
                type: string
              quantity:
                type: integer
              price:
                type: number
              selectedVariants:
                type: object
        address:
          type: object
          properties:
            name:
              type: string
            phone:
              type: string
            province:
              type: string
            city:
              type: string
            district:
              type: string
            detail:
              type: string
        payment:
          type: object
          properties:
            method:
              type: string
            amount:
              type: number
            paidAt:
              type: string
              format: date-time
        shipping:
          type: object
          properties:
            method:
              type: string
            fee:
              type: number
            trackingNumber:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
